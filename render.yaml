# render.yaml - Blueprint para deploy do n8n no Render.com

services:
  # Serviço principal do n8n
  - name: n8n
    type: web
    env: docker
    plan: starter # Para uso real, considere um plano pago para evitar hibernação.
    
    # Define um disco persistente para salvar seus workflows e credenciais
    disk:
      name: n8n-data
      mountPath: /home/node/.n8n
      sizeGB: 1
      
    # Verificação de saúde para o Render saber se o n8n está funcionando
    healthCheck:
      path: /healthz
      
    # Variáveis de ambiente para configurar o n8n
    envVars:
      - key: WEBHOOK_URL
        fromService:
          type: web
          name: n8n
          property: url
      - key: N8N_HOST
        fromService:
          type: web
          name: n8n
          property: host

      # Fuso horário para agendamentos (triggers) funcionarem corretamente
      - key: TZ
        value: America/Sao_Paulo # Ajuste para o seu fuso horário

      # --- Configuração do Banco de Dados ---
      # Diz ao n8n para usar um banco de dados PostgreSQL
      - key: DB_TYPE
        value: postgresdb

      # As variáveis abaixo pegam os dados de conexão diretamente do
      # serviço de banco de dados que definimos abaixo.
      - key: DB_POSTGRESDB_HOST
        fromDatabase:
          name: n8n-db
          property: host
      - key: DB_POSTGRESDB_DATABASE
        fromDatabase:
          name: n8n-db
          property: database
      - key: DB_POSTGRESDB_USER
        fromDatabase:
          name: n8n-db
          property: user
      - key: DB_POSTGRESDB_PASSWORD
        fromDatabase:
          name: n8n-db
          property: password

# A chave 'databases' deve começar no início da linha, sem indentação.
databases:
  - name: n8n-db
    plan: free
    databaseName: n8n
    user: n8n